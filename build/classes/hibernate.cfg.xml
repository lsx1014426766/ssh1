<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE hibernate-configuration PUBLIC
          "-//Hibernate/Hibernate Configuration DTD 3.0//EN"
          "http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd">

<!-- Generated by MyEclipse Hibernate Tools.                   -->
<hibernate-configuration>

	<session-factory>
	<!-- oracle -->
		<!-- <property name="dialect">
			org.hibernate.dialect.Oracle9Dialect
		</property>
		<property name="connection.url">
			jdbc:oracle:thin:@localhost:1521:orcl
		</property>
		<property name="connection.username">scott</property>
		<property name="connection.password">tiger</property>
		<property name="connection.driver_class">
			oracle.jdbc.driver.OracleDriver
		</property> -->
		 <!-- mysql连接 -->
        <property name="connection.url">jdbc:mysql://localhost:3306/test</property> 
        <property name="connection.driver_class">com.mysql.jdbc.Driver</property>
        <property name="connection.username">root</property>
		<property name="connection.password">root</property>
        <property name="myeclipse.connection.profile">mysql_driver</property>
        <property name="dialect">org.hibernate.dialect.MySQL5Dialect</property>
		<property name="hibernate.show_sql">true</property>
		<property name="hibernate.format_sql">true</property>
		<!-- 设置批量删除或者批量更新的数量   批量操作时，需要和此值保持一致-->
		<property name="hibernate.jdbc.batch_size"></property>
		<property name="myeclipse.connection.profile">1412</property>
		<property name="hibernate.current_session_context_class">thread</property>
		
		<!-- 启用二级缓存 -->
		<property name="hibernate.cache.use_second_level_cache">true</property>
		<!-- 选择二级缓存策略提供商(默认选择 EHCache提供商) -->
		<property name="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</property>
		
		<!-- 启用查询缓存 -->
		<property name="hibernate.cache.use_query_cache">true</property>
		
		<!-- 可以通过实体类以及映射文件生成对应的表结构 -->
		<!-- <property name="hibernate.hbm2ddl.auto">update</property> -->
		
		<!--
		这里是通过xml文件建立起了和pojo和table的关系
		  -->
		<mapping resource="com/zrgk/mapping/Emp.hbm.xml" />
		<mapping resource="com/zrgk/mapping/Dept.hbm.xml" />
		<!-- 
		方式二，跳过xml这个配置文件，直接在class pojo类上加上注解，直接和table做关联
		这2种方式都可以，然后统一通过exportdb这个工具类反向生成对应的table
		
		尝试使用XML和Annotation两种方式进行POJO类的映射
		 -->
		<mapping class="com.pb.entity.Group" />
		<mapping class="com.pb.entity.User" />
	</session-factory>
</hibernate-configuration>